type Post {
  _id: ID!
  title: String!
  content: String!
  imageUrl: String!
  creator: User!
  createdAt: String!
  updatedAt: String!
}

type User {
  _id: ID!
  email: String!
  name: String!
  password: String
  status: String
  posts: [Post!]!
}

input UserInputData {
  email: String!
  name: String!
  password: String!
}

type AuthData {
  userId: ID!
  token: String!
  tokenExpiration: String!
}

input PostInputData {
  title: String!
  content: String!
  imageUrl: String!
}

type RootMutation {
  createUser(userInput: UserInputData): User!
  createPost(postInput: PostInputData): Post!
}

type PostListData {
  posts: [Post!]!
  totalItems: Int!
}

type RootQuery {
  login(email: String!, password: String!): AuthData!
  getPosts(page: Int!): PostListData!
  getSinglePost(postId: ID!): Post!
}

schema {
  mutation: RootMutation
  query: RootQuery
}
